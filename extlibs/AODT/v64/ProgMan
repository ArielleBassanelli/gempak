--------------------------------------------------------------------------------
Advanced Objective Dvorak Technique (AODT)  -- Version 6.4.2
PROGRAMMER'S MANUAL              (updated 01 April 2005)
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
1. Contents of NAODT Directory
--------------------------------------------------------------------------------

top level directory :
aodtenv         - AODT enviromental parameter setup/definition file
compileall      - compile script (uses Makefile in this directory)
Makefile        - Makefile
TOPOLRES        - supplied topography file

inc: Directory containing include files for AAPL, API, and AODT libraries
odtapi.h        - function definitions for API routines
odtextern.h     - function definitions for external data access routines in APPL
odtlibdefs.h    - variable definitions for AODT library routines 
odtlibdefs-x.h  - variable definitinos for AODT library routines (external defs)
odtlibfuncs.h   - shared function definitions for AODT library routines
odtlib.h        - AODT library #include, #define and structure definitions
odtmcidas.h     - function definitions for McIDAS routines used in APPL
odtremap.h      - function and variable definitions for remapping routines

lib: Directory containing all library files 
libaodtapi.a    - AODT API routines library
libaodtext.a    - external data access routines library
libaodtf2c.a    - F2C library (for McIDAS nav/cal routines)
libaodtlib.a    - AODT routines library 
libaodtmcidas.a - AODT McIDAS routines library
libaodtnav.a    - AODT McIDAS Nav/Cal routines library
libmcidas.a     - McIDAS library

odtapi: Directory containing AODT API routines
Makefile        - compile routines in this directory using "make all" command

odtappl: Directory containing AODT McIDAS Application routine
Makefile        - compile routine in this directory using "make" command

odtext: Directory containing AODT external data access routines
Makefile        - compile routines in this directory using "make all" command
odtsst.c        - read GRIB format SST file and return value at location
odttopo.c       - read McIDAS topography file and return flag value at location

odtlib: Directory containing AODT library routines
Makefile        - compile routines in this directory using "make all" command

odtmcidas: Directory containing all specific McIDAS routines
Makefile        - compile routines in this directory using "make all" command
navcal          - directory of McIDAS navigation/calibration and F2C libraries

- Individual library files can be compiled separately in the odtapi, odtext, 
odtlib, and odtmcidas directories.  Application routines can be compiled in the
odtappl and odttest directories (odtappl need McIDAS library to compile) and 
will produce the application/executable files "naodt" and "naodttest", 
respectively (will be moved into the top directory).  Both application files 
need specific library files to be compile prior to compilation of the specific
application/executable.

- The file "compileall" script can be used to properly compile and link all 
library files for the production of the defined application executable file.
One parameter is required with the execution of the Korn Shell script, either 
"appl" or "test".  The "appl" will compile and create the "naodt" executable 
application, while "test" will compile and create the "naodttest" executable 
application. 


--------------------------------------------------------------------------------
2. AODT Flow Chart
--------------------------------------------------------------------------------

A. General AODT Logic Flow Chart
--------------------------------
This general AODT flow chart lists the overall logic used in the AODT intensity
estimates and other history file access functions.  A more detailed discussion 
is provided in Section B below, with API and APPL functions listed along with
the discussions.  

                                  == Get env values ==
                                           |
                                           v
                                  ==   Get Inputs   ==
                                           |
                                           v
                                  == AODT ANALYSIS? ==
                       __________/                    \__________
                       |                                        |
                       v                                        v
                    ** Y **                                  ** N **
             ==    initialize    ==                             |
             ==  get image info  ==                             |
             == CENTER LOCATION? ==                             |
            /                      \                            |
           |                        |                           |
           v                        v                           |
       ** AUTO **              ** MANUAL **                     |
   == read forecast ==     == cursor position ==                |
   ==  ring/spiral  ==              |                           |
   == interp/extrap ==              |                           |
   == warmest pixel ==              |                  == get date/time ==
   == best location ==              |                 /         v         \ 
           |________________________|                |     ** GRAPH **     |
                       |                             v      == n/a ==      v
                       v                        ** LIST **            ** DELETE **
          ==    determine basin     ==       == get record  ==  ==  delete record(s)   ==
          ==     read SST file      ==       == list record ==  == recompute record(s) ==
          ==     read topo file     ==       ==   repeat?   ==  == write history file  ==
          ==  load satellite data   ==              |_______________________|
          == calculate temperatures ==                          |
          == determine RMW/eyesize  ==                          |
          ==  calculate scene type  ==                          |
          ==  OVERRIDE SCENE TYPE?  ==                          |
          |                          |                          |
          |                          |                          |
          v                          v                          |
       ** Y **                    ** N **                       |
== obtain new scene ==         == nothing ==                    |
          |__________________________|                          |
                       |                                        |
                       v                                        |
          == calculate intensities  ==                          |
          ==  insert into history   ==                          |
          ==   write history file   ==                          |
                       \_______________________________________/
                                           |     
                                           v
                               == output diagnostics ==
                                           |
                                           v
                               ==    free memory     ==

B. More Detailed Description of General Flow Chart 
--------------------------------------------------

This section will expand in more detail the General Flow Chart presented 
in Section A above.  Beneath each description the APPL or API routine
called to perform the task is provided.  If a routine has an "opposite"
routine (a "get" routine that performs the opposite task as the "set"
routine), it is listed in parenthesis.

- get path names from UNIX env variables 
    APPL : mcidas_getpaths() and mcidas_setpaths()
- get input values from command line or GUI interface (see Section 3)
    APPL : mcidas_getinputs()
- send land and search options to AODT library via API
    API  : aodt_setmiscoptions() (access with aodt_getmiscoptions())
- send initial classification options to AODT library via API
    API  : aodt_setstartstr() (access with aodt_getstartstr())
- send history file name to AODT library and read history file via API
    API  : aodt_sethistoryfile() (access with aodt_gethistoryfile())
- IF RUNNING AODT INTENSITY ESTIMATION 
--- initialize variables for current AODT analysis 
      API  : aodt_initialize()
--- obtain satellite image data info (date/time)
      APPL : mcidas_getsatdatainfo()
--- send satellite image data info to AODT library via API
      API  : aodt_setIRimageinfo() (access with aodt_getIRimageinfo())
--- OBTAIN STORM CENTER LOCATION AUTOMATICALLY OR MANUALLY
--- IF AUTO DETERMINATION OF STORM CENTER LOCATION
----- send forecast file and type to AODT library via API
        API  : aodt_setforecastfile() (access with aodt_getforecastfile())
----- read forecast file and return interpolated/extrapolated initial location
        API  : aodt_runautomode1()
----- send initial location to AODT library via API
        API  : aodt_setlocation() (access with aodt_getlocation())
----- read satellite image centered at initial location into arrays
        APPL : mcidas_getsatimagedata()
----- send initial location satellite image arrays to AODT library via API
        API  : aodt_loadIRimage()
----- determine warmest pixel location 
        API  : aodt_getwarmeyetemplocation()
----- reread satellite image centered at warmest pixel location into arrays
        APPL : mcidas_getsatimagedata()
----- determine final "best" aotumated location
        API  : aodt_runautomode2()
--- IF MANUAL DETERMINATION OF STORM CENTER LOCATION
----- obtain final location at cursor position
        APPL : mcidas_getcursorloc()
--- send final location to AODT library via API
      API  : aodt_setlocation() (access with aodt_getlocation())
--- send ocean domain flag to AODT library via API 
      API  : aodt_setdomain() (access with aodt_getdomain())
--- read sea surface temperature (SST) value from external GRIB file
      APPL : extern_readsstvalue()
--- send SST value to AODT library via API, if available
      API  : aodt_setsstvalue() (access with aodt_getsstvalue())
--- read topography flag value from external TOPOLRES file
      APPL : extern_readtopovalue()
--- send topography flag value to AODT library via API
      API  : aodt_settopovalue() (access with aodt_gettopovalue())
--- read satellite image centered at final location into arrays
      APPL : mcidas_getsatimagedata()
--- send final location satellite image arrays to AODT library via API
      API  : aodt_loadIRimage()
--- determine various environmental temperature values
      API  : aodt_seteyecloudtemp()
--- determine scene type values
      API  : aodt_scenetype()
--- obtain scene type values
      API  : aodt_getscenetypes()
--- IF MANUAL OVERRIDE OF SCENE TYPE
----- allow user to override scene type values
        APPL : mcidas_overridescenetype()
----- send scene type values to AODT library via API
        API  : aodt_setscenetypes()
--- determine intensity estimate value(s)
      API  : aodt_intensity()
--- format output intensity bulletin
      API  : aodt_bulletinoutput()
--- add/insert intensity estimate within history structure
      API  : aodt_historyrecordinsert()
--- write history structure to file
      API  : aodt_historywritefile()
- IF LISTING/GRAPHING/DELETING RECORDS IN HISTORY FILE
--- send analysis date/time values to AODT library via API
      API  : aodt_setdatetime() (access with aodt_getdatetime())
--- IF LISTING HISTORY FILE
----- obtain pointer to current record in history structure
        API  : aodt_historygetnextrec()
----- send current intensity information to API and return string for listing
        API  : aodt_historylistfmt()
----- repeat, if necessary
        API  : aodt_historygetnextrec()
--- IF GRAPHING HISTORY FILE
----- not available yet
        APPL : mcidas_setgraphoptions()
--- IF DELETING HISTORY FILE
----- delete records and recompute remaining records in structure, if necessary
        API  : aodt_historydeleterec()
----- write history structure to file
        API  : aodt_historywritefile()
--- IF COMMENTING HISTORY FILE
----- add comment to individual record in history file
        API  : aodt_historyaddcomment()
----- write history structure to file
        API  : aodt_historywritefile()
- obtain diagnostic messages string from AODT library via API
    API  : aodt_diagnostics()
- free any allocated memory in AODT library via API
    API  : aodt_freememory()

--------------------------------------------------------------------------------
3. Input Variables
--------------------------------------------------------------------------------

This secsion will list all of the input control variables used within the AODT 
algorithm and how they are used within the AODT APPL or API routines.  These 
values can be input via a command line (as with McIDAS in the odtmcidas
directory), or can be controlled via a GUI interface.  Please read AODT
User's Guide for more detailed descriptions for each variable.  APPL variables
listed are those associated with the mcidas_getinputs routine in the 
odtappl/odtappl.c sample APPL routine for McIDAS command line entry.

HISTORY - Character string for the AODT history file name, if utilized.  
          If used, a full AODT analysis will be performed on satellite image
          being investigated.  No default string value.
          APPL variables : hfile, odt

LIST    - Flag value to provide ASCII text listing of AODT history file 
          contents.  Default should be FALSE.  Can be used in conjunction with
          OUTPUT and DATE keywords.
          APPL variable : olist

OUTPUT  - Character string and flag value to define path/file name of ASCII
          file in which history file listing is presented.  Character string
          default for file name is ODTDUMP.ASC (default path is $HOME directory
          or as defined with $ODTLIST environmental variable).
          APPL variables : odump, listfile

GRAPH   - Flag value to provide graphical display of AODT history file 
          contents.  Default should be FALSE.  Can provide option to control
          output variable for graph (plot temperature values or wind intensity
          values instead of T#/pressure intensity values).  Can be used in
          conjunction with PLOT and DATE keywords.
          APPL variable : ograph, owind, ographtemp

PLOT    - Integer values which define graphic color level for various graphic
          parameters presented in graphical display of AODT history file.  A
          value definition of 0 (zero) will suppress display of variable.  
          Default values are (respectively) : 1 2 0 0 0 0 6 0 1 7 (the order
          of these values are as listed below in APPL variables).
          APPL variables : drawCI, drawCIadj, drawTW, drawTN, drawTR, drawTRO, 
                           drawTIEr, drawTIEa, igraph, iword

LAND    - Flag value to suppress or allow AODT analysis over land feature.  
          Default condition is suppress (TRUE).  
          APPL variable : oland

DELETE  - Flag value to allow user to remove selected records within AODT
          history file and automatically recompute any remaining records
          following deleted records.  Default should be FALSE.  Can be 
          used in conjunction with DATE keyword. 
          APPL variable : odel

OVER    - Flag value to allow user to manually override scene type.  Default
          condition is FALSE.
          APPL variable : override 

SEARCH  - Flag value to indicate whether maximum curved band search is to
          be performed if a curved band scene type is assigned to the current
          image scene type.  Default condition is TRUE.
          APPL variable : osearch

AUTO    - Flag value to indicate automated determination of storm center 
          location.  Additional input variables indicate forecast file type
          and ATCF objective technique acronym (OFCL for official forecast).
          Default condition is NO (FALSE).
          APPL variables : oautomode, fixfile, ifixtype, atcftype

SST     - Character string value to define the input sea surface temperature
          file name.  Default condition is SST.DAT.
          APPL variable : sstfile

IC      - Floating point value to set the initial classification strength
          of a storm at the beginning of it's intenstiy analysis history.  A
          value greater than 1.0 will assign the initial intensity to the 
          input value, while a value < 1.0 will allow the AODT analysis to be 
          set for the initial classification.  Default condition is 1.0.
          APPL variables : ostartstr, osstr

DOMAIN  - Integer value to indicate manual or automatic storm basin 
          determination.  If the basin is manually input, the value will assign
          the actual storm basin (west pacific or atlantic).  Default condition
          is AUTO selection; if manually selected there is no default basin.
          APPL variable : ixdomain

DATE    - Integer and character string variables to define the analysis range
          over which the records in the AODT history file for a particular 
          storm is graphed, listed, or modified via record deletion.  Default 
          conditions are the start of the file and end of the file (for listing
          or graphing) or the starting record date/time (for record deletion).
          APPL variables : ot1, ot2, od1, od2

COMMENT - Flag value and character string variables to add a comment to an 
          individual history file record.  Comment can be up to 50 characters
          in length.
          APPL varialbes : ocommadd, comment

ATCF    - Integer and character string variables to list in ATCF format output
          (single record or multiple record history file listing) and to select
          specific value to list in ATCF output.
          APPL variables : oatcf, ifixtype, atcfpath, atcfsrcID
          


--------------------------------------------------------------------------------
4. AODT API Library Functions
--------------------------------------------------------------------------------

All subroutines are integer functions and return a zero value (successful 
execution), a positive value (successful execution with a diagnostic message),
or a negative value (unsuccessful execution with an error message).  Return 
values are listed with each function call below, with the individual 
corresponding message described in Section 5.

- aodt_atcfoutputfile(char atcfpath[],int ilisttype,char atcffile[])
Inputs : - character string containing output path for ATCF-format listing
           of current intensity estimate 
         - integer value containing annual cyclone number value for ATCF listing
Outputs: character string containing full path and file name (derived) for 
         ATCF-format output file
Returns: 0

- aodt_bulletinoutput(char bulletin[])
Inputs : none
Outputs: string containing entire AODT intensity bulletin (max 5000 chars)
Returns: 0

- aodt_freememory( )
Inputs : none
Outputs: none
Returns: 0

- aodt_getdomain( int *domain )
Inputs : none
Outputs: domain flag (0=atlantic,1=west pacific)
Returns: 72, 73

- aodt_getforecastfile( char fixfile[],int *ifixtype,char atcftype[] )
Inputs : none
Outputs: - string containing forecast file name and path (max 200 chars)
         - integer value containing forecast file type 
           (0=ATCF, 1=NHC, 2=JTWC, 3=Generic)
         - ATCF file forecast type (default=OFCL (official))
Returns: -51, 14

- aodt_gethistoryfile( char hfile[] )
Inputs : none
Outputs: string containing history file name and path (max 200 chars)
Returns: -1, 0

- aodt_getIRimageinfo( int *imagedate,int *imagetime,int *cursat,char ccursat)
Inputs : none
Outputs: - integer values containing IR image date and time information
         - integer value containing internal AODT satellite code (see Section 8)
         - character value containing satellite name (see Section 8)
Returns: 0

- aodt_getlocation( float *lat, float *lon, int *posflag )
Inputs : none
Outputs: - floating point values containing latitude and longitude coordinates 
           of storm position
         - integer value containing location positioning method flag
           (1=forecast interpolation,2=laplacian technique,
            3=warm spot location,4=linear extrapolation)
Returns: -21, 21, 22

- aodt_getmiscoptions(int *oland,int *osearch)
Inputs : none
Outputs: - integer value containing intensity analysis operation over land flag 
           (0=don't allow,1=allow)
         - integer value containing maximum log spiral search flag 
           (0=no search(OFF),1=search(ON))
Returns: 0

- aodt_getscenetypes(int *neweye,int *newcloud,int *oldeye, int *oldcloud )
Inputs : none
Outputs: integer values containing new eye and cloud scene types and old eye
         and cloud scene types if they have been manually selected by the user.
Returns: 0

- aodt_getsstvalue( float *cursst )
Inputs : none
Outputs: floating point value containing the sea surface temperature (SST) at 
         the storm center location
Returns: 0, 115

- aodt_getstartstr( int *sstr,float *strength)
Inputs : none
Outputs: - integer value containing initial classification flag 
           (0=value not set(OFF),1=value set(ON))
         - floating point value containing initial classification value
Returns: 0

- aodt_gettopovalue( int *topoflag )
Inputs : none
Outputs: integer value containing topography flag (1=land,2=ocean)
Returns: -33, 0

- aodt_getversion( char *version[]  )
Inputs : none
Outputs: string containing AODT version number (max 20 chars)
Returns: 0

- aodt_getwarmeyetemplocation(float *warmlat, float *lwarmon)
Inputs : none
Outputs: floating point values containing latitude and longitude coordinates of
         the warm spot location during automated storm center determination 
Returns: 91

- aodt_historyaddcommnet(char *comment, int *modified) 
Inputs : character string containing comment to add to history file record
Outputs: inteter value containting modified record number
Returns: -4, 68

- aodt_historybullfmt(struct odtdata *historyrec,char listing[])
Inputs : pointer to current (desired) history structure element
Outputs: string containing AODT intensity bulletin for individual record in 
         history file (max 5000 chars)
Returns: 0

- aodt_historydeleterec(int *deleted,int *modified)
Inputs : none
Outputs: integer values containing number of deleted and modified records during
         manual history file record removal by user
Returns: -61, 66

- aodt_historygetnextrec(int reset,struct odtdata **histrec)
Inputs : integer value containing flag to reset pointer to beginning of history 
         structure (-1=current intensity estimate, 0=reset,
         (+value)=pointer to next record)
Outputs: pointer to next (desired) history structure element
Returns: -1, 0 (if pointer=0)

- aodt_historylistfmt(struct odtdata *historyrec,int ilisttype,char atcfsrcID[],char listing[])
Inputs : - pointer to current (desired) history structure element
         - integer value containing annual cyclone number value for ATCF listing and flag values
           for listing of various Raw/Final T# values
         - character string containing Fix site/WMO Identifier information for ATCF listing
Outputs: string containing AODT history file listing for individual record in
         history file (max 5000 chars)
Returns: 0

- aodt_historyrecordinsert(int *modified,int *records )
Inputs : none
Outputs: integer values containing number of records modified and total number 
         of records writen during insertion of new intensity estimate into 
         history structure
Returns: 61, 62, 63, 64, (65 if number of modifications is >0)

- aodt_historywritefile( int *records )
Inputs : none
Outputs: integer value containing number of total records writen to history file
Returns: -3, -2, 67 

- aodt_initialize( )
Inputs : none
Outputs: none
Returns: 0

- aodt_intensity( )
Inputs : none
Outputs: none 
Returns: 0, 71

- aodt_loadIRimage(float temps[][500],float lats[][500],float lons[][500],
                   int numx,int numy )
Inputs : - floating point array containing temperature values from IR image
         - floating point array containing latitude values of corresponding 
           temperature array values
         - floating point array containing longitude values of corresponding 
           temperature array values
         - integer values containing number of columns(x) and rows(y) in arrays
Outputs: none
Returns: 0

- aodt_qdiagnostics(char message[])
Inputs : none
Outputs: string containing all non-fatal runtime diagnostic messages 
         during AODT execution (max 5000 chars)
Returns: 0

- aodt_qmessage(int errorcode,int inint1,char instrng[], char message[])
Inputs : - integer containing error or information message code value
         - integer containing value to be presented in corresponding message
         - string containing value to be presented in corresponding message 
           (max 200 chars)
Outputs: string containing complete error message (information messages are
         stored and accessed with aodt_qdiagnostics) (max 10000 chars)
Returns: 0

- aodt_runautomode1(float *lat, float *lon,int *pos)
Inputs : none
Outputs: floating point values containing initial latitude and longitude values
         for storm center position
         integer value containing initial location positioning method
         (1=forecast interpolation, 4=linear extrapolation, 0=error)
Returns: -46, -45, -44, -43, 42, 43, 44, 45, 46

- aodt_runautomode2(float flat, float flon, float *lat, float *lon,int *pos)
Inputs : - floating point values containing input (forecast) latitude and longitude 
           values for storm center position
Outputs: - floating point values containing final latitude and longitude values
           for storm center position
         - integer value containing final location positioning method
           (1=forecast interpolation, 2=laplacian technique,
            3=spiral analysis, 4=combination spiral/ring analysis,
            5=warm spot location, 6=linear extrapolation)
Returns: 51

- aodt_scenemap( int eyescene,int cloudscene, char scene[] )
Inputs : integer values containing eye and cloud scene indicator values
         (if one scene is entered as -1, the absolute value will be returned for
         the remaining valid scene type)
Outputs: string containing the scene type for the given eye and cloud
         scene type indicator values.  
Returns: 0
Notes  : function can be used to determine absolute eye and cloud scene types
         and derived final scene type used during execution of AODT in 
         determination of intensity estimation.  There are six valid eye scenes 
         and five valid cloud scenes.  

- aodt_scenetype( )
Inputs : none
Outputs: none
Returns: -51, -41, 0

- aodt_setdatetime( int ot1, int ot2, char od1[], char od2[], int odel )
Inputs : integer values containing starting and ending time values for listing,
         graphing, or deleting history file records
         strings containing starting and ending date values for
         listing, graphing, or deleting history file records 
         (date format:ddmmmyyyy; dd=date,mmm=month,yyyy=year; ex.07SEP2004)
         integer value containing delete option flag (0=list or graph,1=delete)
Outputs: none
Returns: 0

- aodt_setdomain( int ixdomain )
Inputs : domain flag from keyword entry 
         (0=automatic determination,
          1=manual selection (Atlantic),2=manual selection (West Pacific))
Outputs: none
Returns: -81, 0

- aodt_seteyecloudtemp( )
Inputs : none
Outputs: none
Returns: -51
Notes  : values are calculated and stored within AODT library and not passed
         back to APPL routine

- aodt_setforecastfile( char fixfile[],int ifixtype,char atcftype[] )
Inputs : - string containing forecast file name and path (max 200 chars)
         - integer value containing forecast file type 
           (0=ATCF, 1=NHC, 2=JTWC, 3=Generic)
         - ATCF file forecast type (default=OFCL (official))
Outputs: none
Returns: 0

- aodt_sethistoryfile( char hfile[] )
Inputs : string containing history file name and path (max 200 chars)
Outputs: none
Returns: -1, 11
Notes  : program will read history file into AODT library memory

- aodt_setIRimageinfo( int date,int time)
Inputs : integer values containing IR image date and time information
Outputs: none 
Returns: 0

- aodt_setlocation( float lat, float lon, int pos )
Inputs : - floating point values containing latitude and longitude coordinates
           of storm position 
         - integer value containing location positioning method flag
           (1=forecast interpolation, 2=laplacian technique,
            3=warm spot location, 4=linear extrapolation)
Outputs: none
Returns: -21, 21, 22

- aodt_setmiscoptions(int oland,int osearch)
Inputs : - integer value containing intensity analysis operation over land flag 
           (0=don't allow,1=allow)
         - integer value containing maximum log spiral search flag 
           (0=no search(OFF),1=search(ON))
Outputs: none
Returns: 0

- aodt_setscenetypes(int newey,int newcloud,int oldeye,int oldcloud )
Inputs : integer values containing new eye and cloud scene types and old eye and
         cloud scene types if they have been manually selected by the user.
Outputs: none
Returns: 0

- aodt_setsstvalue( float cursst )
Outputs: none
Inputs : floating point value containing the sea surface temperature (SST) at the 
         storm center location
Returns: -21, 0, 115

- aodt_setstartstr(int ostartstr,float osstr)
Inputs : - integer value containing initial classification flag 
           (0=value not set(OFF),1=value set(ON))
         - floating point value containing initial classification value
Outputs: none
Returns: 0

- aodt_settopovalue( float curtopo )
Inputs : integer value containing topography flag (1=land,2=ocean)
Outputs: none
Returns: -33, -21, 0

--------------------------------------------------------------------------------
5. AODT External Library Functions
--------------------------------------------------------------------------------

Note : McIDAS APPL Library functions are presented in the ProgMan file
in the odtmcidas directory.

- extern_qmessage(int value,int intin,char charin [],char retstring[])
Inputs : - integer containing error or information message code value
         - integer containing value to be presented in corresponding message
         - string containing value to be presented in corresponding message 
           (max 200 chars)
Outputs: string containing complete error message (information messages are
         stored and accessed with aodt_qdiagnostics) (max 10000 chars)
Returns: 0

- extern_readsstvalue(char *sstfile,float lat,float lon,float *cursst)
Inputs : - string value containing sea surface temperature file and path name
           (max 200 chars)
         - floating point values containing latitude and longitude coordinates
           of storm position
Outputs: floating point value containing SST value
Returns: 81, 111, 112, 113, 114

- extern_readtopovalue( char topofile[], float lat, float lon, int *curtopo)
Inputs : - string value containing topography file name and path (max 200 chars)
         - floating point values containing latitude and longitude coordinates
           of storm position
Outputs: integer value containing topography flag (1=land,2=ocean)
Returns: -32, -31, 0, 71

--------------------------------------------------------------------------------
6. Error Codes
--------------------------------------------------------------------------------

== AODT Library/API Errors ==
Code  Error                                                 Input for message
____  ____________________________________________________  ___________________
  -1  Error reading from existing history file              history file (C)
  -2  Error creating history file                           history file (C)
  -3  Error writing to history file                         history file (C)
  -4  Error writing comment to history file (date error)    history file (C)
 -41  Fourier Transform Analysis failure                    none
 -43  Error accessing forecast file; extrapolation failed   forecast file (C)
 -44  Invalid forecast file; extrapolation failed           forecast file (C)
 -45  Error reading forecast file; extrapolation failed     forecast file (C)
 -46  Forecast interpolation failure; extrapolation failed  forecast file (C)
 -51  Error with temperature value(s) (<-100C or >+40C)     none
 -61  Error with Start Date with DELETE keyword             none
 -72  Error writing output ATCF list file                   ATCF file (C)
 -81  Error determining ocean basin                         none


== McIDAS/External/APPL Errors ==
Code  Error                                                 Input for message
____  ____________________________________________________  ___________________
 -11  Error reading image file                              image file (C)
 -12  Error accessing image file                            image file (C)
 -13  Bad navigation                                        image file (C)
 -14  Line/Element mismatch                                 image file (C)
 -15  Multiple bands                                        image file (C)
 -16  Latitude/Longitude conversion error                   image file (C)
 -17  Data read off edge of image                           image file (C)
 -21  Invalid storm center location                         none
 -22  Error setting up navigation                           none
 -23  Bad navigation                                        image file (C)
 -31  Error accessing topography file                       topography file (C)
 -32  Error reading topography file                         topography file (C)
 -71  Error writing output ASCII list file                  list file (C)
 -91  Error initializing McIDAS environment                 none
 -92  Error with mouse button entry during override         none
 -99  Exiting AODT                                          none

--------------------------------------------------------------------------------
7. Runtime Diagnostic Codes
--------------------------------------------------------------------------------

== AODT Library/API Diagnostic Messages ==
Code  Message                                               Input for message
____  ____________________________________________________  ___________________
  11  Utilizing history file                                history file (C)
  14  Utilizing forecast file                               history file (C)
  21  Using manually selected storm center position         none
  22  Using automatically selected storm center position    none
  42  Forecast interpolation successful                     none
  43  Error accessing forecast file; extrapolation o.k.     forecast file (C)
  44  Invalid forecast file; extrapolation o.k.             forecast file (C)
  45  Error reading forecast file; extrapolation o.k.       forecast file (C)
  46  Error with forecast interpolation; extrapolation o.k  forecast file (C)
  51  Will utilize position                                 auto position (I)
  61  Overwrote record in history file                      history file (C), record (I)
  62  Inserting record in history file                      history file (C), record (I)
  63  Added record to empty history file                    history file (C)
  64  Added record ot end of history file                   history file (C)
  65  Modified record(s) in history file                    history file (C), modified (I)
  66  Deleted record(s) in history file                     history file (C), deleted (I)
  67  Wrote record(s) to history file                       history file (C), records (I)
  68  Added comment to history file record                  history file (C), record (I)
  71  Tropical cyclone over land                            none
  72  Ocean basin automatically determined                  basin flag (I)
  73  Ocean basin manually selected                         basin flag (I)
  91  Warmest pixel temperature location                    none
 101  Successfully completed listing                        none
 103  Successfully completed record deletion                none
 104  Successfully completed AODT analysis                  none
 104  Successfully wrote ATCF output file                   atcf file (C)
 115  Invalid SST value                                     none

== McIDAS/External/APPL Diagnostic Messages ==
Code  Message                                               Input for message
____  ____________________________________________________  ___________________
   1  Performing abbreviated AODT analysis                  none
   2  Performing full AODT analysis                         none
  12  Utilizing image file                                  image file (C)
  13  Writing output ASCII list file                        list file (C)
  15  Utilizing SST GRIB file                               SST grib file (C)
  16  Utilizing topography file                             topography file (C)
  31  User accepted scene type (during override)            none
  32  User modified scene type (during override)            none
  81  SST value at cursor location                          none
 102  Successfully completed graph                          none
 111  Error accessing SST GRIB file                         none
 112  Memory error during SST GRIB file read                none
 113  Corrupted SST GRIB file                               none
 114  Error reading SST GRIB file                           none
 115  Invalid SST value                                     none
 121  Simultaneous OVER and AUTO keyword usage              none
 500  Print input string                                    input string (C)

--------------------------------------------------------------------------------
8. AODT Internal Satellite Numbers
--------------------------------------------------------------------------------

Code  Satellite 
____  _________
   0      GOES8
   1      GOES9
   2     GOES10
   3     GOES11
   4     GOES12
   5       GMS5
   6     MTSAT1
   7     MTSAT2
   8       MET5
   9       MET6
  10       MET7
  11       MSG1
  12       MSG2
  13       MSG3
  14       FY2B
  15       FY2C
  16       FY2D
